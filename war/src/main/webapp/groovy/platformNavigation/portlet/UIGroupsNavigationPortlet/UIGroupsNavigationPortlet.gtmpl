<%
    /**
     * Copyright ( C ) 2012 eXo Platform SAS.
     *
     * This is free software; you can redistribute it and/or modify it
     * under the terms of the GNU Lesser General Public License as
     * published by the Free Software Foundation; either version 2.1 of
     * the License, or (at your option) any later version.
     *
     * This software is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
     * Lesser General Public License for more details.
     *
     * You should have received a copy of the GNU Lesser General Public
     * License along with this software; if not, write to the Free
     * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
     * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
     */
%>
<%
    import org.exoplatform.portal.mop.user.UserNavigation;
    import org.exoplatform.portal.mop.user.UserNode;
    import org.exoplatform.portal.webui.util.Util;
    import org.exoplatform.portal.mop.Visibility;
    import org.exoplatform.webui.organization.OrganizationUtils;
    import org.gatein.common.text.EntityEncoder;
    import org.exoplatform.platform.webui.NavigationURLUtils;
    import org.exoplatform.web.application.JavascriptManager;
    import org.exoplatform.portal.mop.user.UserNode;




    void renderGroupPageNavigation(UserNavigation navigation) {

        def nodes = uicomponent.getValidUserNodes(navigation);
        if (nodes == null || nodes.isEmpty()) return;

        def ownerId = navigation.getKey().getName();
		def ownerIdUrl = "/portal/g/"+ownerId.replace("/",":");
        String navTitle = OrganizationUtils.getGroupLabel(ownerId);
        //def lang=Util.getPortalRequestContext().getUserPortalConfig().getPortalConfig().getLocale();
        def groupId= navTitle;
        println """

        			<li class="dropdown-submenu">

                         <a href="$ownerIdUrl">$groupId</a>

				""";
        renderPageNodes(nodes);

        println """
				      </li>
				   
				""";
    }

    def groupNavigations = uicomponent.getGroupNavigations();



%>

<%// Begin render page nodes method
  void renderPageNodes(Collection<UserNode> pageNodes) {
    if(pageNodes == null || pageNodes.isEmpty()) {
      return;
    }
%>
  	<ul class="dropdown-menu">

<%

    for(UserNode pageNode : pageNodes) {

      String href = NavigationURLUtils.getURL(pageNode)
      String label = pageNode.getLabel();
      if (label == null) {
      	label = pageNode.getName();
      }
      boolean hasChild = pageNode.getChildrenCount() > 0;
      String icon = pageNode.getIcon();
      if(icon == null) icon = "uiIconFile";
      def clazz = "";
      if(hasChild){
        clazz = "dropdown-submenu";
      }
      %><li class="$clazz">
      <%if(href != null) {%>
        <a href="$href">$label</a>
    <%} else {%>
        <a href="#">$label</a>
    <%}
      if(hasChild) {%>
        <%
          Collection<UserNode> childPageNodes = pageNode.getChildren();
          renderPageNodes(childPageNodes);
        %>
    <%}%>
        </li>
  <%}%>
     </ul>
<%} // End render method




%>



<div id="$uicomponent.id" class="uiGroupsNavigationPortlet uiDropdownWithIcon dropdown pull-left">

    <% if (groupNavigations != null && !groupNavigations.isEmpty()) {
        lastNode = '';



%>
         <a class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">
        				<i class="uiIconPLFMyConnection" style="margin-right:5px;"></i>Organizations
        			</a>
              <ul class="dropdown-menu">
             <%  for (navigation in groupNavigations) {
                  renderGroupPageNavigation(navigation);

        } %>
              </ul>
<%

    }
    %>
</div>


