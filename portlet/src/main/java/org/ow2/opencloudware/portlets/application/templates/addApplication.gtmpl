<div style="margin-right:20%;margin-left:20%">

	<h3 class="opencloudwareTitle">New Application</h3>

	<form id="newApplicationForm" class="form-horizontal" action="@{createApplication()}" method="post" enctype="multipart/form-data">
		<div class="control-group">
			<label for="inputApplicationName" class="control-label">Application Name (*) : </label>
			<div class="controls">
				<input type="text" id="inputApplicationName" name="inputApplicationName" placeholder="Application Name">
			</div>
		</div>
		<div class="control-group">
                			<label for="inputApplicationDescription" class="control-label">Application Description(*) : </label>
                			<div class="controls">
                				<textarea rows="3" id="inputApplicationDescription" name="inputApplicationDescription" placeholder="Application Description"></textarea>
                			</div>
                		</div>

        <div class="control-group">
            <span class="pull-left span-left">
                <%

                    def selectSize = usersNames.size();
                    if (managersNames.size() > selectSize) {
                        selectSize=managersNames.size();
                    }
                    if (selectSize < 5) selectSize = 5;
                    if (selectSize > 10) selectSize = 10;


                %>
                Organization Users
                <select class="ocwSelect" size="${selectSize}" name="usersNames" id="usersNames" multiple="multiple" style="width:100%;">
                    <%

                        usersNames.keySet().each { current ->
                    %>
                    <option value="${current}">${usersNames.get(current)}</option>
                    <%
                        }


                    %>
                </select>
                <input type="hidden" name="inputUsersNames" id="inputUsersNames">
            </span>
            <span class="span-center">

                <button type="button" class="btn btn-default roleButton" id="addRole">Add &gt;</button>
                <button type="button" class="btn btn-default roleButton" id="removeRole">&lt; Remove</button>
            </span>
            <span class="pull-right span-right">
                Application Managers
                <select name="managersNames" class="ocwSelect"  size="${selectSize}" id="managersNames" multiple="multiple">
                    <%

                        managersNames.keySet().each { current ->
                    %>

                    <option value="${current}">${managersNames.get(current)}</option>
                    <%
                        }


                    %>
                </select>

                <input type="hidden" name="inputManagersNames" id="inputManagersNames">

            </span>
        </div>

        <div class="control-group">
            <label for="inputSelectApplicationType" class="control-label">Create your application from : </label>
            <div class="controls">
                <select name="inputSelectApplicationType" class="ocwSelect" id="inputSelectApplicationType">
                    <option value="ovf" selected="selected">OVF File</option>
                    <option value="build">Build result file (jar, war, zip, ...)</option>
                </select>
            </div>
        </div>

        
        <div class="control-group" id="controlGroupInitialApplicationModele">
			<label for="inputApplicationModele" class="control-label">Initial Application Modele (*) : </label>
			<div class="controls">
				<input type="file" id="inputApplicationModele" name="inputApplicationModele" placeholder="Application Modele">
			</div>
		</div>


        <div class="control-group" id="controlGroupScalabilityRules">
			<label for="inputScalabilityRules" class="control-label">Scalability rules : </label>
			<div class="controls">
				<input type="file" id="inputScalabilityRules" name="inputScalabilityRules" placeholder="Scalability Rules File">
			</div>
		</div>

        <div class="control-group" id="controlGroupAlternativeApplicationModele">
        			<label for="inputAlternativeModeles" class="control-label">Alternatives Application Modeles : </label>
        			<div class="controls">
        				<input type="file" id="inputAlternativeModeles" name="inputAlternativeModeles" placeholder="Alternatives Applications Modeles" multiple="multiple">
        				<input type="file" id="inputAlternativeModele" name="inputAlternativeModele" style="display:none">

        			</div>
        </div>


        <div class="control-group hide" id="controlGroupBuildResult">
            <label for="inputBuildFile" class="control-label">Build Result : </label>
            <div class="controls">
                <input type="file" id="inputBuildFile" name="inputBuildFile" placeholder="Build Result">
            </div>
        </div>

        <div class="control-group hide" id="controlGroupConfigurationScript">
            <label for="inputConfigurationScript" class="control-label">Configuration Script : </label>
            <div class="controls">
                <input type="file" id="inputConfigurationScript" name="inputConfigurationScript" placeholder="Configuration Script">
            </div>
        </div>

        <div class="control-group hide" id="controlGroupSelectAppliance">
            <label for="inputSelectAppliance" class="control-label">Appliance : </label>
            <div class="controls">
                <select name="inputSelectAppliance" class="ocwSelect" id="inputSelectAppliance">
                     <%

                        appliances.keySet().each { current ->
                    %>
                        <option value="${appliances.get(current)}">${current}</option>
                    <%
                        }


                    %>
                </select>
            </div>
        </div>


		<div class="control-group">
			<div class="controls">
				<span> (*) are required fields.</span>
			</div>
		</div>

		<div class="control-group">
			<div class="controls">
				<button type="button" class="btn btn-primary" id="register">Add Application</button>
				<button type="button" class="btn btn-default" id="cancel" onclick="javascript:window.location='@{ApplicationManagement.index()}'">Cancel</button>
				<button type="reset" class="btn btn-default" id="reset" onclick="javascript:window.location='@{ApplicationManagement.displayAddForm()}'">Reset</button>
			</div>
		</div>


	</form>



    <script>
        require(['SHARED/jszip'], function(jsZip){

        var content;
            $("#addRole").click(function() {
                $("#usersNames option:selected" ).each(function() {
                    var currentVal = $(this).val();
                    var currentText = $(this).text();

                    $("#managersNames").append('<option value="'+currentVal+'">'+currentText+'</option>');
                });

                $("#usersNames option:selected").remove();

                changeSelect("#usersNames","#inputUsersNames");
                changeSelect("#managersNames","#inputManagersNames");


            });

            function changeSelect(selectName, inputName){

                var inputString = "";
                var select = selectName + " option";

                $(select).each(function() {
                    var currentVal = $(this).val();
                    inputString+= currentVal+",";
                });

                $(inputName).val(inputString.substring(0,inputString.length-1));


            }


            $("#removeRole").click(function() {
                $("#managersNames option:selected" ).each(function() {
                    var currentVal = $(this).val();
                    var currentText = $(this).text();
                    $("#usersNames").append('<option value="'+currentVal+'">'+currentText+'</option>');
                });
                $("#managersNames option:selected").remove();

                changeSelect("#usersNames","#inputUsersNames");
                changeSelect("#managersNames","#inputManagersNames");



            });


            $("#inputSelectApplicationType").change(function() {
                if ($("#inputSelectApplicationType option:selected").val()=="ovf") {
                    $("#controlGroupInitialApplicationModele").show();
                    $("#controlGroupAlternativeApplicationModele").show();
                    $("#controlGroupScalabilityRules").show();
                    $("#controlGroupSelectAppliance").hide();
                    $("#controlGroupBuildResult").hide();
                    $("#controlGroupConfigurationScript").hide();

                } else {

                    $("#controlGroupInitialApplicationModele").hide();
                    $("#controlGroupAlternativeApplicationModele").hide();
                    $("#controlGroupScalabilityRules").hide();
                    $("#controlGroupBuildResult").show();
                    $("#controlGroupConfigurationScript").show();
                    $("#controlGroupSelectAppliance").show();


                }



            });

            $(function () {
                changeSelect("#usersNames","#inputUsersNames");
                changeSelect("#managersNames","#inputManagersNames");



            });



            $("#register").click(function () {
                var zip = new JSZip();
                var nbFileToRead = 0;
                var nbFileRead = 0;

                if ($("#inputAlternativeModeles").get(0).files.length == 0) {
                    $("#newApplicationForm").submit();
                }

                for (var i = 0; i < $("#inputAlternativeModeles").get(0).files.length; ++i) {
                    var filename =$("#inputAlternativeModeles").get(0).files[i].name;

                    var reader = new FileReader();
                    reader.fileName = filename // file came from a input file element. file = el.files[0];
                    reader.onload = function(readerEvt) {
                        console.log("file "+ readerEvt.target.fileName+" readed");
                        zip.file(readerEvt.target.fileName, reader.result);
                        nbFileRead++;
                        console.log(nbFileRead);
                        if (nbFileRead==nbFileToRead) {
                            generateZip();
                        }
                    };

                    nbFileToRead++;
                    reader.readAsBinaryString($("#inputAlternativeModeles").get(0).files[i]);
                }

                function ajaxSuccess () {
                    var response = this.responseText;
                    window.location='@{ApplicationManagement.index()}';
                  }


                function generateZip () {
                    console.log("in generate zip");
                    content = zip.generate({type:"blob"});

                    var fd = new FormData(document.getElementById("newApplicationForm"));
                    fd.append("inputAlternativeModeleZip", content, "modeles.zip");

                    var request = new XMLHttpRequest();
                    request.onload = ajaxSuccess;
                    request.open("POST", "@{createApplication()}");
                    request.send(fd);

                }

            });
        });
    </script>
</div>