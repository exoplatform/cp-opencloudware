<div style="margin-right:20px;margin-left:20px">
    <div class="pull-right">
                <h3>
                    <a class="btn" href="@{ApplicationManagement.displayApplicationInstanceInformation(applicationInstanceId = applicationInstanceId)}">
                            <i class="icon-backward"></i>Back to Instance informations
                        </a>


                </h3>
            </div>
            <div class="clearfix"></div>

    <div>


	<h3 class="opencloudwareTitle">VM Information</h3><br/>
	<div id="generalInformation">

        <h4>VM : ${vmId}</h4>
        <p>Evolution de la facturation pour cette VM</p>
    </div>
    <div id="vmInformation">
    		<div id="content">

    			<div class="demo-container">
    				<div id="placeholder" class="demo-placeholder" style="float:left; width:80%;"></div>
    				<p id="choices" style="float:right; width:20%;"></p>
    			</div>
                <select id="snapSelect" style="display:none">
                    <option value="month"  selected="selected">Month</option>
                    <option value="year">Year</option>
                </select>


                <div id="ui" style="width:600px;height:100px;">

    		</div>

    		<div id="summary" class="hide">
    			The total consumption for the current period (<span id="periodStart"></span> to <span id="periodEnd"></span>) is :
    			<ul>
    				<li class="billingStatus">CPU : <span id="cpu.usage"></span> $</li>
    				<li class="billingStatus">Memory : <span id="memory.total"></span> $</li>
    				<li class="billingStatus">Storage : <span id="storage.used"></span> $</li>
    				<li class="billingStatus">Network output : <span id="network.0.tx"></span> $</li>
    				<li class="billingStatus">Network input : <span id="network.0.rx"></span> $</li>
    				<li class="billingStatus">Total : <span id="total"></span> $</li>
    			</ul>
    		</div>


			<br/>
    		<div>
    			<button id="fakeData">Use other datas</button>
    		</div>

    	</div>


        <style>

        .billingStatus {
        	list-style: disc;
    		margin-left: 40px;
        }

       	.billingStatus span {

        	font-weight:bold;

        }


        #content input {
        	font-size: 18px;
        }

        #content input[type=checkbox] {
        	margin: 7px;
        }

        #content label {
        	display:initial;
        }

        #content {
        	width: 100%;
        	margin: 0 auto;
        }

        #footer {
        	margin-top: 25px;
        	margin-bottom: 10px;
        	text-align: center;
        	font-size: 12px;
        	color: #999;
        }

        .demo-container {
        	box-sizing: border-box;
        	width: 100%;
        	height: 450px;
        	padding: 20px 15px 15px 15px;
        	margin: 15px auto 30px auto;
        	border: 1px solid #ddd;
        	background: #fff;
        	background: linear-gradient(#f6f6f6 0, #fff 50px);
        	background: -o-linear-gradient(#f6f6f6 0, #fff 50px);
        	background: -ms-linear-gradient(#f6f6f6 0, #fff 50px);
        	background: -moz-linear-gradient(#f6f6f6 0, #fff 50px);
        	background: -webkit-linear-gradient(#f6f6f6 0, #fff 50px);
        	box-shadow: 0 3px 10px rgba(0,0,0,0.15);
        	-o-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        	-ms-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        	-moz-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        	-webkit-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        }

        .demo-placeholder {
        	width: 100%;
        	height: 100%;
        	font-size: 14px;
        	line-height: 1.2em;
        }

        .legend table {
        	border-spacing: 5px;
        	width:initial;
        }
        </style>

        <script  type="text/javascript">
            require( ["SHARED/jquery", "SHARED/flot", "SHARED/flottime", "SHARED/flotselection", "SHARED/flotstack", "SHARED/flotsnap"], function ($, flot) {
                $(function() {
                	//var vmId = "ae80d47e-bf70-43ff-be06-2fe623e0485b";
                	var vmId = "${vmId}";
                	var startDate="2015-01-01";
                	var endDate="2015-09-20";



    				var choiceContainer = $("#choices");
    				var datasets;

    				var monthySum;


    				var plot,
    					  container = $('#plot'),                         // plot container
    					  ui = $('#ui'),                                  // buttons container
    					  periods = [ 'month', 'year' ],    // time periods
    					  period = periods[0];                            // the default time period unit - day
    				  // create the ui buttons
    				  var createUI = function(container, period) {
    				  	container.html("");
    					createButton('<< prev ' + period)
    					  .appendTo(container)
    					  .click(function() {
    						plot && plot.prevRange(period, 0);
    						fillSummary();
    					  });

    					createButton('next ' + period + ' >>')
    					  .appendTo(container)
    					  .click(function() {
    						plot && plot.nextRange(period, 0);
    						fillSummary();
    					  });
    				  };

    				// create a buttons
    					var createButton = function(text) {
    					return $('<button>' + text + '</button>');
    				};

    				function fillGraph() {

    					jQuery.ajax({
    						url:"/rest/private/opencloudware/vm/getBilling/"+vmId,
    						dataType: "text",
    						mimeType: "textPlain",
    						success:function(data) {

    							var result = jQuery.parseJSON(data);
    							console.log(result);
    							if (result!=null) {
    								datasets = {

    									"cpu.usage": {
    										label:"CPU",
    										data:[]
    									},
    									"memory.total": {
    										label:"Memory",
    										data:[]
    									},
    									"storage.used": {
    										label: "Storage",
    										data: []
    									},
    									"network.0.tx": {
    										label: "Network output",
    										data: []
    									},
    									"network.0.rx": {
    										label: "Network input",
    										data: []
    									}

    								};

    								monthlySum = {
    									"total": {
    									 	data:{}
    									},
    									"cpu.usage": {
    										data:{}
    									},
    									"memory.total": {
    										data:{}
    									},
    									"storage.used": {
    										data: {}
    									},
    									"network.0.tx": {
    										data: {}
    									},
    									"network.0.rx": {
    										data: {}
    									}

    								};

    								jQuery.each(result.ok, function(index, val) {
    									var date=index.split("-");
    									var year = date[0];
    									var month = date[1];
    									var day = date[2];

    									jQuery.each(this, function(index,val) {
    										var date = new Date(year+"-"+month+"-"+day);
    										date.clearTime();
    										var newValue = [date.getTime(),val]
    										datasets[index]["data"].push(newValue);

    										var monthDate = new Date(year+"-"+month+"-01");
    										monthDate.clearTime();
    										//console.log(monthDate+"-"+monthDate.getTime());
    										if (monthlySum[index]["data"][monthDate.getTime()]) {
    											monthlySum[index]["data"][monthDate.getTime()] = monthlySum[index]["data"][monthDate.getTime()]+val;
    										} else {
    											monthlySum[index]["data"][monthDate.getTime()] = val;
    										}
    										if (monthlySum["total"]["data"][monthDate.getTime()]) {
    											monthlySum["total"]["data"][monthDate.getTime()] = monthlySum["total"]["data"][monthDate.getTime()]+val;
    										}else {
    											monthlySum["total"]["data"][monthDate.getTime()] = val;
    										}

    									});

    								});

    								// hard-code color indices to prevent them from shifting as
    								// countries are turned on/off
    								var i = 0;
    								$.each(datasets, function(key, val) {
    									val.color = i;
    									++i;
    								});
    								// insert checkboxes
    								choiceContainer.html("");
    								$.each(datasets, function(key, val) {
    									choiceContainer.append("<br/><input type='checkbox' name='" + key +
    										"' checked='checked' id='id" + key + "'></input>" +
    										"<label for='id" + key + "'>"
    										+ val.label + "</label>");
    								});
    								choiceContainer.find("input").click(plotAccordingToChoices);

    								var placeholder = $("#placeholder");
    								placeholder.bind("plotselected", function (event, ranges) {
    									$.each(plot.getXAxes(), function(_, axis) {
    										var opts = axis.options;
    										opts.min = ranges.xaxis.from;
    										opts.max = ranges.xaxis.to;
    									});
    									plot.setupGrid();
    									plot.draw();
    									plot.clearSelection();

    								});

    								$("#placeholder").bind("plothover", function (event, pos, item) {

    									if (item) {
    										var x = item.datapoint[0],
    											y = item.datapoint[1].toFixed(2);

    										var xDate  = new Date(x);
                                            var n = xDate.toISOString().slice(0, 10);
    										$("#tooltip").html(item.series.label + " of " + n + " = " + y)
    											.css({top: item.pageY+5, left: item.pageX+5})
    											.fadeIn(200);
    									} else {
    										$("#tooltip").hide();
    									}
                                   	});

    								plotAccordingToChoices();
    								// create the ui buttons
    								createUI(ui, period);
    								fillSummary();


    								 // add the select event
    									$('#snapSelect').change(function() {
    									  var value = this.options[this.selectedIndex].value;
    									  // clear the ui buttons
    									  ui.empty();
    									  // redraw the buttons with the currently selected time period
    									  createUI(ui, periods[periods.indexOf(value)]);

    									  // redraw the plot for the current time period
    									  //plot.snapTo(value, 0);
    									});


    								// Add the Flot version string to the footer
    								$("#footer").prepend("Flot " + $.plot.version + " &ndash; ");
    							} else {
    								setTimeout(fillGraph,5000);
    							}
    						},
    					});
    				}


    				function plotAccordingToChoices() {
    					var data = [];
    					choiceContainer.find("input:checked").each(function () {
    						var key = $(this).attr("name");
    						if (key && datasets[key]) {
    							data.push(datasets[key]);
    						}
    					});
    					if (data.length > 0) {

    						var CurrentDate = new Date();
    						var lastDayOfCurrentMonth = CurrentDate.moveToLastDayOfMonth().clearTime();
    						var maxX = lastDayOfCurrentMonth.getTime();		//now

    						//CurrentDate.setMonth(CurrentDate.getMonth() -1);
    						var firstDayOfPreviousMonth=CurrentDate.moveToFirstDayOfMonth().clearTime();
    						var minX =firstDayOfPreviousMonth.getTime();		// nom - 1 month


    						plot = $.plot("#placeholder", data, {
    							series: {
    								stack: true,
    								points: {
    									show: false
    								}
    							},
    							yaxis: {
    								min: 0
    							},
    							bars: {
    								barWidth: 1000*60*60*24, //1 day
    								show: true,
    								align: "center"
    							},
    							xaxis: {
    								//tickDecimals: 0,
    								mode: "time",
    								//timezone: "Europa/Paris",

    								tzOffset: (new Date()).getTimezoneOffset(),
    								timeformat: "%Y/%m/%d",
    								min:minX,
    								max:maxX,
    								tickSize: [5, "day"]
    							},
    							selection: {
    								mode: "x"
    							},
    							legend: {
    								position:"nw",

    							},
    							grid: {
    								hoverable: true,
    								clickable: true
    							}
    						});

    						$("<div id='tooltip'></div>").css({
                            			position: "absolute",
                            			display: "none",
                            			border: "1px solid #fdd",
                            			padding: "2px",
                            			"background-color": "#fee",
                            			opacity: 0.80
                            		}).appendTo("body");
    					}
    				}

    				function fillSummary() {
    					var summaryContainer= jQuery('#summary');
    					var startDate, endDate, xaxis = plot.getXAxes()[0], opts = plot.getOptions();
                        if (!xaxis) return;

                        startDate = new Date(xaxis.min+1000);
                        endDate = new Date(xaxis.max);

                        var year = startDate.getFullYear();
    					var month = startDate.getMonth()+1;
    					var day = startDate.getDate();
    					startDate = new Date(year+"-"+month+"-"+day).clearTime();

    					year = endDate.getFullYear();
    					month = endDate.getMonth()+1;
    					day = endDate.getDate();
    					endDate = new Date(year+"-"+month+"-"+day).clearTime();

                        jQuery('#periodStart').html(startDate.toLocaleDateString());
                        jQuery('#periodEnd').html(endDate.toLocaleDateString());


    					var indexes = ["cpu.usage","memory.total","storage.used","network.0.tx","network.0.rx","total"];

    					indexes.forEach(function(value) {
    						if (monthlySum[value]["data"][startDate.getTime()]) {
    							jQuery("[id='"+value+"']").html(monthlySum[value]["data"][startDate.getTime()].toFixed(2));
    						} else {
    							jQuery("[id='"+value+"']").html(0);
    						}
    					});

    					jQuery("#summary").show();

                    	jQuery("#fakeData").prop("disabled",false);
    				}

    				fillGraph();


					jQuery("#fakeData").click(function () {
						jQuery(this).prop("disabled",true);
						vmId = "ae80d47e-bf70-43ff-be06-2fe623e0485b";
                    	fillGraph();
					});
					
                });



            });

        </script>



</div>

